syntax = "proto3";
package com.cognite.seismic;

import "google/protobuf/empty.proto";
import "cognite/seismic/protos/ingest_service_messages.proto";

/**
Service for ingestion and metadata updates of SEG-Y files into Cognite Data Fusion (CDF) seismic datastore

* We use the word `File` to refer to a single seismic file/dataset/cube
* Surveys can have many files attached to them, with different attributes or processing stages, and every file must
belong to a survey
* The expected order of ingestion is:

1) Register a survey, if it does not exist

2) Register a file
Files are expected to be previously uploaded to a Google Cloud Storage (GCS) bucket at this point, and the service needs
permission to this bucket in the form of a service account.
The RegisterFile endpoint will request the survey name or id, bucket address and the CRS used in this file
(e.g.: EDM50, WGS84), so be sure to have this information prior at hand.

3) Ingest the file
If the RegisterFile endpoint completes successfully, and your file is found in the bucket, you can now send a request to
the IngestFile endpoint, and an asynchronous process will be started remotely to download and process the file.
You can verify the status of this process by calling the Status endpoint  with the id returned in the IngestFile endpoint

As soon as the status of the processing job is set to complete, data from the file will be available with the query service

**/
service Ingest {
    /**
    Registers a new survey.
    **/
    rpc RegisterSurvey (RegisterSurveyRequest) returns (RegisterSurveyResponse) {}
    /**
    Registers a new file in a (previously registered) survey.
    **/
    rpc RegisterFile (RegisterFileRequest) returns (RegisterFileResponse) {}
    /**
    Sends a request for the ingestion of a registered file into the queue. Will return a job id which can be queried for status.
    **/
    rpc IngestFile (IngestFileRequest) returns (IngestFileResponse) {}
    /**
    Retrieves the status of an ingestion job.
    **/
    rpc Status (StatusRequest) returns (StatusResponse) {}
    /**
    Deletes a file
    **/
    rpc DeleteFile (DeleteFileRequest) returns (google.protobuf.Empty) {}
    /**
    Updates file metadata
    **/
    rpc EditFile (EditFileRequest) returns (EditFileResponse) {}
    /**
    Updates survey metadata
    **/
    rpc EditSurvey (EditSurveyRequest) returns (EditSurveyResponse) {}
}

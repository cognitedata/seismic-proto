import "google/protobuf/empty.proto";
import "cognite/seismic/protos/types.proto";
import "cognite/seismic/protos/seismic_service_messages.proto";

/**
Service for querying data and metadata from seismic volume in Cognite Data Fusion (CDF) seismic datastore
We use the word `File` to refer to a single seismic file/dataset/cube. Queries on a file require it to have been
previously ingested into CDF using (ingest_service.proto)

Queries are divided in:

    - Metadata:

    General information and headers for surveys and files

    - Geometry and grid:

    Information on a file's grid and positioning, such as coverage and range of inlines and crosslines

    - Trace:

    Find a single trace in the file. A trace will include header, position information and samples.
    More details about the trace format can be found on its definition in (types.proto)

    - Vertical slice:

    Get 2D vertical slices of samples (thus 1D arrays of traces). The slices can be based on a single defined line or
    in an arbitrarily defined line with interpolation.

    - Area:

     Get 3D volumes of samples (thus 2D arrays of traces) defined by a region in the horizontal plane

    - Horizontal slice:

     Get 2D horizontal slices of samples defined by a region in the horizontal plane and a specific index in depth/time

    - Artificial sampling:

    Get the (calculated/interpolated) values of properties in the file/cube given arbitrary positions
**/

package coognite.seismic.v1;

service Seismic {
    // Metadata queries

    /**
    Lists all surveys accessible to the client. Optionally includes volumes associated with the surveys.
    **/
    rpc ListSurveys (ListSurveysRequest) returns (stream ListSurveysResponse) {}

    /**
    Finds one survey given its name or id. Optionally, lists its associated volumes.
    REMOVED: REPLACED WITH ListSurveys
    rpc GetSurvey (SurveyQueryRequest) returns (GetSurveyResponse) {}
    **/

    /**
    Search surveys based on two criteria:
        Coverage polygon of files in the survey are within an area delimited by a specified polygon
        Filters on metadata of both the survey and the file
    Both criteria are optional and can be combined for a more detailed search.
    REMOVED: REPLACED WITH ListSurveys
    rpc SearchSurveys (SearchSurveyRequest) returns (SurveyWithFilesResponse) {}
    **/

    /**
    Lists all lable, both owned by the authorized CDF project and shared with it
    REMOVED: REPLACED WITH ListSurveys
    rpc ListVolumes (ListVolumesQueryRequest) returns (ListVolumeResponse) {}
    **/
    /**
    Returns volume metadata given its id.
    **/
    rpc ListVolumes (ListVolumeRequest) returns (stream ListVolumeResponse) {}
    /**
    Returns a binary header given its file name or id.
    REMOVED: Include in GetVolumeMetadata
    rpc GetBinaryHeader (HeaderFileQueryRequest) returns (GetBinaryHeaderResponse) {}
    **/
    /**
    Returns a text header given its file name or id.
    REMOVED: Include in GetVolumeMetadata
    rpc GetTextHeader (HeaderFileQueryRequest) returns (GetTextHeaderResponse) {}
    **/

    /**
    Returns the coverage for a given file identified by its id or name.
    The coverage is represented by a polygon either in WKT or geojson and represents the area covered by traces
    in the file.
    There can be holes in the polygon if traces do not exist in an area inside of it.
    REMOVED: MOVING TO GEOSPATIAL
    rpc GetFileDataCoverage (FileCoverageRequest) returns (DataCoverageResponse) {}
    **/
    /**
    [Not implemented yet]
    Returns the navigation polygon for the survey obtained from DISKOS
    REMOVED: WAS NOT IMPLEMENTED.
    rpc GetNavigationPolygon (NavigationPolygonRequest) returns (DataCoverageResponse) {}
    **/
    /**
    Returns the full range of the inlines and crosslines in the file, i.e. the minimum and maximum inline and crossline
    REMOVED: OPTIONALLY INCLUDE IN GetVolumeMetadata
    rpc GetFileLineRange (FileQueryRequest) returns (LineRangeResponse) {}
    **/
}

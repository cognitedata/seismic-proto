syntax = "proto3";
package com.cognite.seismic;

import "types.proto";

/* Service for quering seismic data. */
service Query {
    rpc GetSurvey (SurveyQueryRequest) returns (GetSurveyResponse) {}
    rpc GetSurveyFiles(SurveyQueryRequest) returns (GetSurveyFilesResponse) {}
    rpc GetFile (FileQueryRequest) returns (GetFileResponse) {}
    rpc GetBinaryHeader (HeaderFileQueryRequest) returns (GetBinaryHeaderResponse) {}
    rpc GetTextHeader (HeaderFileQueryRequest) returns (GetTextHeaderResponse) {}
    rpc GetDataCoverage (FileQueryRequest) returns (GetDataCoverageResponse) {}
    rpc GetSegYFile (SegYQueryRequest) returns (stream SegYQueryResponse) {}
    rpc GetTrace (TraceQueryRequest) returns (Trace1D) {}
    rpc GetSlice (SliceQueryRequest) returns (Trace2D) {}
    rpc GetCube (CubeQueryRequest) returns (Trace3D) {}
    rpc GetLine (LineQueryRequest) returns (Trace1D) {}
    rpc GetTimeSlice (TimeSliceQueryRequest) returns (Trace2D) {}
    rpc SearchSurveys (SearchRequest) returns (SurveyListResponse) {}
}

// Requests messages

/* Request survey by id or name. */
message SurveyQueryRequest {
    oneof survey {
        string id = 1;
        string name = 2;
    }
    bool list_files = 3;
    bool include_metadata = 4;
}

/* Request file by id or name. */
message FileQueryRequest {
    oneof file {
        string id = 1;
        string name = 2;
    }
}

message LineBasedRectangleQuery {
    LinePosition top_left = 1;
    LinePosition bottom_left = 2;
    LinePosition bottom_right = 3;
    LinePosition top_right = 4;
}

message LineBasedLineQuery {
    LinePosition start = 1;
    LinePosition end = 2;
}

message LinePosition {
    uint32 inline = 1;
    uint32 xline = 2;
}

message HeaderFileQueryRequest {
    oneof file {
        string id = 1;
        string name = 2;
    }
    bool include_raw_header = 3;
}

message SearchRequest {
    oneof query {
        PolygonQuery polygon = 1;
        MetadataFilter metadata_filter = 2;
    }
}

message MetadataFilter {
    repeated KeyValueFilter filter = 1;
}

message KeyValueFilter {
    string key = 1;
    string value = 2;
}

message SurveyListResponse {
    repeated string name = 1;
}

message TraceQueryRequest {
    FileQueryRequest file = 1;
    oneof query {
        PolygonQuery polygon = 2;
        TraceRequest trace = 3;
    }
    bool include_trace_header = 4;
}

message PolygonQuery {
    Wkt polygon = 1;
    CRS crs = 2;
}

message TraceResponse {
    repeated float trace = 1;
    bytes header = 2;
}

message SliceQueryRequest {
    FileQueryRequest file = 1;
    CRS crs = 2;
    Wkt slice = 3;
    uint32 line_number = 4;
    Direction direction = 5;
    bool include_trace_header = 6;
}

message CubeQueryRequest {
    FileQueryRequest file = 1;
    oneof query {
        PolygonQuery polygon = 2;
        LineBasedRectangleQuery lines = 3;
    }
    bool include_trace_header = 4;
}

message LineQueryRequest {
    FileQueryRequest file = 1;
    CRS crs = 2;
    oneof query {
        Wkt line = 3;
        LineBasedLineQuery line_req = 4;
    }
    bool include_trace_header = 5;
}

message TimeSliceQueryRequest {
    FileQueryRequest file = 1;
    CRS crs = 2;
    Wkt polygon = 3;
    uint32 depth = 4;
}

message SegYQueryRequest {
    FileQueryRequest file = 1;
    oneof query {
        PolygonQuery polygon = 2;
        TraceRequest trace = 3;
        LineBasedRectangleQuery lines = 4;
    }
    bool copy_binary_header = 5; // copies from the original input file
    bool copy_text_header = 6; // copies from the original input file
}

message TraceRequest {
    Direction direction = 1;
    uint32 trace_id = 2;
}

// Response messages

message GetDataCoverageResponse {
    Wkt polygon = 1;
}

// The underlying array of floats.
message Trace1D {
    bytes trace_header = 1;
    repeated float trace = 2;
}

message Trace2D {
    repeated Trace1D trace = 1;
}

message Trace3D {
    repeated Trace2D trace = 1;
}

message SegYQueryResponse {
    bytes content = 1;
}

message GetSurveyResponse {
    Survey survey = 1;
    repeated RegisteredFile files = 2;
}

message GetSurveyFilesResponse {
    repeated FileIdName files = 1;

}

message GetFileResponse {
    RegisteredFile file = 1;
    bytes binary_header = 2;
    string text_header = 3;
}

message GetBinaryHeaderResponse {
    BinaryHeader meta = 1;
}

message GetTextHeaderResponse {
    TextHeader meta = 1;
}

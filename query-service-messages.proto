/**
grpc service for querying seismic data from Cognite Data Fusion
*/
syntax = "proto3";
package com.cognite.seismic;

import "types.proto";

// Requests messages

message SurveyQueryRequest {
    Identifier survey = 1;
    bool list_files = 2;       // should the files from this survey be listed
    bool include_metadata = 3; // should metadata be included in the result
}

message SurveyDataCoverageRequest {
    Identifier survey = 1;
}

message HeaderFileQueryRequest {
    Identifier file = 1;
    bool include_raw_header = 2; // should the raw text header be included
}

/**
Filter the area included in the SEGY file by a polygon defined either by spatial coordinates
or by a set of inline and crossline indices
**/
message SegYQueryRequest {
    Identifier file = 1;
    oneof query {
        Geometry polygon = 2;
        LineBasedRectangle lines = 3;
    }
}

// Find a single trace by coordinates (x AND y)
message CoordinateTraceQueryRequest {
    Identifier file = 1;
    TraceCoordinateQuery coordinates = 2;
    bool include_trace_header = 4;
}

// Find a single trace by index (inline AND crossline)
message LineTraceQueryRequest {
    Identifier file = 1;
    TracePositionQuery position = 3;
    bool include_trace_header = 4;
}

message PathQueryRequest {
    Identifier file = 1;
    Geometry geometry = 2;
    bool include_trace_header = 3;
}

message LineSliceQueryRequest {
    Identifier file = 1;
    LineSelect line = 2;
    bool include_trace_header = 3;
}

message GeometrySliceQueryRequest {
    Identifier file = 1;
    Geometry geometry = 2;
    bool include_trace_header = 3;
}

message LineCubeRequest {
    Identifier file = 1;
    LineBasedRectangle rectangle = 2;
    bool include_trace_header = 3;
}

message GeometryCubeRequest {
    Identifier file = 1;
    Geometry geometry = 2;
    bool include_trace_header = 3;
}

message LineTimeSliceQueryRequest {
    Identifier file = 1;
    LineBasedRectangle rectangle = 2;
    int32 z = 3;             // either time or depth according to the file
}

message GeometryTimeSliceQueryRequest {
    Identifier file = 1;
    Geometry geometry = 2;
    int32 z = 3;             // either time or depth according to the file
}

// Query on polygon OR metadata
message SearchRequest {
    oneof query {
        Geometry polygon = 1;
        MetadataFilter metadata_filter = 2;
    }
}

/* Supporting query message types. */

message LineBasedRectangle {
    TracePositionQuery top_left = 1;
    TracePositionQuery bottom_left = 2;
    TracePositionQuery bottom_right = 3;
    TracePositionQuery top_right = 4;
}

message MetadataFilter {
    map<string, string> filter = 1;
}

message KeyValueFilter {
    string key = 1;
    string value = 2;
}

message PolygonQuery {
    Wkt polygon = 1;
    CRS crs = 2;
}

message TraceResponse {
    repeated float trace = 1;
    bytes header = 2;
}

message TraceCoordinateQuery {
    int32 x = 1;
    int32 y = 2;
}

message TracePositionQuery {
    int32 iline = 1;
    int32 xline = 2;
}

// Response messages

message AvailableLines {
    repeated int32 lines = 1;
}

message SearchSurveyListResponse {
    repeated string name = 1;
}

message GetDataCoverageResponse {
    Wkt polygon = 1;
}

message GetSurveyResponse {
    Survey survey = 1;
    repeated File files = 2;
}

message GetFileResponse {
    File file = 1;
    bytes binary_header = 2;
    string text_header = 3;
}

message GetBinaryHeaderResponse {
    BinaryHeader meta = 1;
}

message GetTextHeaderResponse {
    TextHeader meta = 1;
}
